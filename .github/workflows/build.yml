name: Build and Deploy Web App

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read
  actions: read

env:
  AWS_REGION: ${{ vars.AWS_REGION }}
  WEBHOSTING_BUCKET: ${{ vars.WEBHOSTING_BUCKET }}
  SHARED_BUILD_DATA_BUCKET: ${{ vars.SHARED_BUILD_DATA_BUCKET }}

jobs:
  build-web:
    name: Build and Deploy Vite Web App
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.15.5

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Build Web
        run: pnpm --filter @mss-frontend/web build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}


      - name: Upload (sync) frontend to shared S3 bucket
        run: aws s3 sync apps/web/dist s3://$WEBHOSTING_BUCKET/ --delete --region $AWS_REGION

      - name: Set cache headers for static assets
        run: |
          aws s3 cp s3://$WEBHOSTING_BUCKET/ s3://$WEBHOSTING_BUCKET/ \
            --recursive \
            --exclude "*" --include "*.js" \
            --metadata-directive REPLACE \
            --cache-control "public, max-age=31536000, immutable" \
            --content-type "application/javascript" \
            --region $AWS_REGION

          aws s3 cp s3://$WEBHOSTING_BUCKET/ s3://$WEBHOSTING_BUCKET/ \
            --recursive \
            --exclude "*" --include "*.css" \
            --metadata-directive REPLACE \
            --cache-control "public, max-age=31536000, immutable" \
            --content-type "text/css" \
            --region $AWS_REGION

          aws s3 cp s3://$WEBHOSTING_BUCKET/ s3://$WEBHOSTING_BUCKET/ \
            --recursive \
            --exclude "*" --include "*.png" \
            --metadata-directive REPLACE \
            --cache-control "public, max-age=31536000, immutable" \
            --content-type "image/png" \
            --region $AWS_REGION

          aws s3 cp s3://$WEBHOSTING_BUCKET/ s3://$WEBHOSTING_BUCKET/ \
            --recursive \
            --exclude "*" --include "*.jpg" --include "*.jpeg" \
            --metadata-directive REPLACE \
            --cache-control "public, max-age=31536000, immutable" \
            --content-type "image/jpeg" \
            --region $AWS_REGION

          aws s3 cp s3://$WEBHOSTING_BUCKET/ s3://$WEBHOSTING_BUCKET/ \
            --recursive \
            --exclude "*" --include "*.svg" \
            --metadata-directive REPLACE \
            --cache-control "public, max-age=31536000, immutable" \
            --content-type "image/svg+xml" \
            --region $AWS_REGION

          aws s3 cp s3://$WEBHOSTING_BUCKET/index.html s3://$WEBHOSTING_BUCKET/index.html \
            --metadata-directive REPLACE \
            --cache-control "no-cache, must-revalidate" \
            --content-type "text/html" \
            --region $AWS_REGION

      - name: Download CloudFront Distribution ID from S3 (if exists)
        run: |
          aws s3 cp s3://$SHARED_BUILD_DATA_BUCKET/CLOUDFRONT_DISTRIBUTION_ID.txt CLOUDFRONT_DISTRIBUTION_ID.txt --region $AWS_REGION || true
          if [ -f CLOUDFRONT_DISTRIBUTION_ID.txt ]; then
            export DISTRIBUTION_ID=$(cat CLOUDFRONT_DISTRIBUTION_ID.txt | tr -d '\n')
            echo "DISTRIBUTION_ID=$DISTRIBUTION_ID"
            echo "DISTRIBUTION_ID=$DISTRIBUTION_ID" >> $GITHUB_ENV
            aws cloudfront create-invalidation --distribution-id ${DISTRIBUTION_ID} --paths '/index.html'
          else
            echo "No CLOUDFRONT_DISTRIBUTION_ID.txt found in S3 bucket $SHARED_BUILD_DATA_BUCKET. Skipping CloudFront cache invalidation."
          fi
